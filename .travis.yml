#Travis설정파일

language: java
jdk:
  - openjdk17

branches: #해당 브랜치에 push되면 CI실행
  only:
    - master
    - main

#Travis CI서버 홈
cache: #gradle과 maven으로 가져온 의존성 라이브러리들은 캐싱한다
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

before_install:
  - "chmod +x ./gradlew"
script: "./gradlew clean build"


#CodeDeploy에게 jar파일 + a 전달
before_deploy:
  - mkdir -p before-deploy  #디렉토리 생성: zip파일에 포함시킬 파일을 넣을 거임
  - cp scripts/*.sh before-deploy/  #zip대상 파일
  - cp appspec.yml before-deploy/   #zip대상 파일
  - cp build/libs/*.jar before-deploy/  #zip대상 파일
  - cd before-deploy && zip -r before-deploy *  #before-deploy폴더로 이동 후 파일 압축
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/awsPractice.zip
  
#  - zip -r awsPractice * #zip 파일 생성 (jar파일 단독을 CodeDeploy는 인식못함)
#  - mkdir -p deploy
#  - mv awsPractice.zip deploy/awsPractice.zip
deploy:
  - provider: s3 #S3에게 jar전달
    access_key_id: $AWS_ACCESS_KEY      #s3연동을 위한 key
    secret_access_key: $AWS_SECRET_KEY
    bucket: awspractice-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy   #해당 경로에 있는 파일만 S3에 전달
    wait-until-deployed: true
    on: main

  - provider: codedeploy #codeDeploy에게 배포 요청
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: awspractice-build   #codeDeploy와 S3 버킷 연결
    key: awsPractice.zip
    bundle_type: zip
    application: awsPractice  #CodeDeploy application이름
    deployment_group: awsPractice-group
    region: ap-northeast-2
    wait-until-deployed: true
    on: main



#CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - rmsghchl0@gmail.com
